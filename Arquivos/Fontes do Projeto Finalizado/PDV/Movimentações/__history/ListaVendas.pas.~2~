unit ListaVendas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Buttons, Vcl.Grids,
  Vcl.DBGrids, Vcl.ComCtrls, Vcl.StdCtrls;

type
  TFrmListaVendas = class(TForm)
    Label3: TLabel;
    cbEntradaSaida: TComboBox;
    Label1: TLabel;
    dataInicial: TDateTimePicker;
    Label2: TLabel;
    dataFinal: TDateTimePicker;
    grid: TDBGrid;
    BtnCancelar: TSpeedButton;
    btnComprovante: TSpeedButton;
    btnNota: TSpeedButton;
    procedure FormShow(Sender: TObject);
    procedure cbEntradaSaidaChange(Sender: TObject);
    procedure dataInicialChange(Sender: TObject);
    procedure dataFinalChange(Sender: TObject);
    procedure BtnCancelarClick(Sender: TObject);
    procedure gridCellClick(Column: TColumn);
  private
    { Private declarations }


    procedure buscarData;
  public
    { Public declarations }
  end;

var
  FrmListaVendas: TFrmListaVendas;
  idVenda : string;

implementation

{$R *.dfm}

uses Modulo;

{ TFrmListaVendas }

procedure TFrmListaVendas.BtnCancelarClick(Sender: TObject);
begin
if MessageDlg('Deseja Cancelar a venda?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
begin
 dm.query_vendas.Close;
  dm.query_vendas.SQL.Clear;
  dm.query_vendas.SQL.Add('UPDATE vendas set status = :status where id = :id') ;

  dm.query_vendas.ParamByName('status').Value :=  'Cancelada';
  dm.query_vendas.ParamByName('id').Value :=  idVenda;
  dm.query_vendas.ExecSql;


  //DELETAR TAMBÉM NA TABELA DE MOVIMENTAÇÕES
     dm.query_mov.Close;
      dm.query_mov.SQL.Clear;
      dm.query_mov.SQL.Add('DELETE FROM movimentacoes where id_movimento = :id');
      dm.query_mov.ParamByName('id').Value := idVenda;
      dm.query_mov.ExecSQL;


    MessageDlg('Deletado com Sucesso!!', mtInformation, mbOKCancel, 0);


end;

BtnCancelar.Enabled := false;
btnNota.Enabled := false;
btnComprovante.Enabled := false;
buscarData;
end;

procedure TFrmListaVendas.buscarData;
begin

 dm.query_vendas.Close;
  dm.query_vendas.SQL.Clear;
  dm.query_vendas.SQL.Add('select * from vendas where data >= :dataInicial and data <= :dataFinal and status = :status order by id desc');
  dm.query_vendas.ParamByName('dataInicial').Value :=  FormatDateTime('yyyy/mm/dd', dataInicial.Date);
  dm.query_vendas.ParamByName('dataFinal').Value :=  FormatDateTime('yyyy/mm/dd', dataFinal.Date);
  dm.query_vendas.ParamByName('status').Value :=  cbEntradaSaida.Text;
  dm.query_vendas.Open;
end;


procedure TFrmListaVendas.cbEntradaSaidaChange(Sender: TObject);
begin
buscarData;
end;

procedure TFrmListaVendas.dataFinalChange(Sender: TObject);
begin
buscarData;
end;

procedure TFrmListaVendas.dataInicialChange(Sender: TObject);
begin
buscarData;
end;

procedure TFrmListaVendas.FormShow(Sender: TObject);
begin

cbEntradaSaida.ItemIndex := 0;
dm.tb_vendas.Active := True;
dataInicial.Date := Date;
dataFinal.Date := Date;
buscarData;
end;

procedure TFrmListaVendas.gridCellClick(Column: TColumn);
begin
BtnCancelar.Enabled := true;
btnNota.Enabled := true;
btnComprovante.Enabled := true;
idVenda := dm.query_vendas.FieldByName('id').Value;

end;

end.
